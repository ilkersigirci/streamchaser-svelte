image: tiangolo/docker-with-compose
services:
  - docker:dind

stages:
  - lint
  - build
  - test

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.lint-setup: &lint-setup
  stage: lint
  needs: []
  image: python:3.9
  services: []
  tags:
    - docker

Lint Python:
  <<: *lint-setup
  before_script:
    - pip install flake8
  script:
    - cd backend
    - flake8 --version
    - flake8 --max-line-length=88

Build Backend:
  stage: build
  needs: []
  tags:
    - docker
  # we do this since we cant copy the .env file into the our CI
  # so we make a dummy .env file
  before_script:
    - echo TMDB_API_KEY="dummy" >> backend/.env
  script:
    - echo "Building backend service..."
    - docker-compose build backend
  # remove .env so it doesnt stay as an artifact
  after_script:
    - rm backend/.env

Build Frontend:
  stage: build
  needs: []
  tags:
    - docker
  script:
    - echo "Building frontend service..."
    - docker-compose build frontend

Build Search:
  stage: build
  needs: []
  tags:
    - docker
  script:
    - echo "Building search service..."
    - docker-compose build search

Tests:
  stage: test
  needs: []
  tags:
    - docker
  before_script:
    - echo TMDB_API_KEY="dummy" >> backend/.env
    - apk add postgresql-dev gcc g++ python3-dev musl-dev
    - pip install -r backend/requirements.txt
  script:
    - echo "Testing application..."
    - docker-compose up --build -d backend
    # we sleep to make sure the DB is up and running
    - sleep 15
    - docker-compose exec -T backend python -m pytest -v ../
  allow_failure: true
