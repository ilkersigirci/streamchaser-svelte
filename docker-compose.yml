version: '3.3'
services:
    frontend:
        restart: on-failure
        build: ./frontend
        container_name: svelte
        command: npm run dev -- --host
        ports:
            - 3000:3000
            - 24678:24678
        volumes:
            - ./frontend:/app
            - /app/node_modules
        labels:
          - "traefik.enable=true"
        # TODO: Be able to change between dev and prod
        #   - "traefik.http.routers.streamchaserfrontend.rule=Host(`streamchaser.tv`)"
          - "traefik.http.routers.streamchaserfrontend.rule=Host(`localhost`)"
    backend:
        build: ./backend
        container_name: fastapi
        environment: 
            POSTGRES_PASSWORD: postgres
            POSTGRES_USERNAME: postgres
        ports:
            - 1337:1337
        volumes:
            - ./backend/:/app/backend
        depends_on:
            - db
            - search
        links:
            - db
    search:
        image: getmeili/meilisearch:v0.21.0
        container_name: meilisearch
        ports:
            - 7700:7700
    db:
        image: postgres
        container_name: postgres
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: streamchaser
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - 5432:5432
    traefik:
        image: "traefik:v2.5"
        container_name: "traefik"
        command:
        #- "--log.level=DEBUG"
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entrypoints.web.address=:80"
        ports:
        - "80:80"
        - "443:443"
        - "8080:8080"
        volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"

    whoami:
        image: "traefik/whoami"
        container_name: "simple-service"
        labels:
        - "traefik.enable=true"
        # TODO: Be able to change between dev and prod
        # - "traefik.http.routers.whoami.rule=Host(`whoami.streamchaser.tv`)"
        - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
        - "traefik.http.routers.whoami.entrypoints=web"
volumes:
    pgdata:
    node_modules:
